{"version":3,"sources":["contexts/theme.context.js","Navbar.js","Footer.js","contexts/task.context.js","TaskForm.js","EditTaskForm.js","Task.js","Main.js","App.js","reportWebVitals.js","index.js"],"names":["ThemeContext","createContext","ThemeProvider","props","useState","darkMode","setDarkMode","Provider","value","toggleDarkMode","children","Navbar","useContext","classes","makeStyles","root","display","justifyContent","alignItems","backgroundColor","title","flexGrow","textAlign","swithContainer","brigthnessIcon","color","transform","useStyles","className","AppBar","position","Toolbar","Typography","variant","Switch","onChange","Footer","footer","justifyItems","margin","href","taskReducer","state","action","type","id","uuid","text","completed","map","e","filter","TaskContext","TaskMethodsContext","TaskProvider","useReducer","JSON","parse","window","localStorage","getItem","tasks","dispatch","useEffect","setItem","stringify","console","log","TaskForm","setText","marginTop","borderColor","input","width","TextField","label","evt","target","onKeyUp","code","alert","EditTaskForm","form","border","fontSize","padding","height","textDecoration","fontFamily","Task","editing","setEditing","task","opacity","transition","checkBox","edit","cursor","delete","useStyle","Paper","elevation","Checkbox","checked","onClick","memo","Main","main","container","minHeight","key","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f42ba65.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nexport function ThemeProvider(props) {\r\n  const [darkMode, setDarkMode] = useState(false);\r\n\r\n  const toggleDarkMode = () => {\r\n    setDarkMode(!darkMode);\r\n  };\r\n\r\n  return <ThemeContext.Provider value={{ darkMode, toggleDarkMode }}>{props.children}</ThemeContext.Provider>;\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { ThemeContext } from './contexts/theme.context';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Brightness6Icon from '@material-ui/icons/Brightness6';\r\n\r\nexport default function Navbar() {\r\n  const { darkMode, toggleDarkMode } = useContext(ThemeContext);\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      backgroundColor: darkMode ? 'rgb(56, 56, 56)' : '#3f50b5',\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n      textAlign: 'center',\r\n    },\r\n    swithContainer: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n    brigthnessIcon: {\r\n      color: 'white',\r\n      transform: darkMode ? 'scaleX(-1)' : null,\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar className={classes.root}>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            JATL!\r\n          </Typography>\r\n          <div className={classes.swithContainer}>\r\n            <Switch color=\"default\" onChange={toggleDarkMode} />\r\n            <Brightness6Icon className={classes.brigthnessIcon} />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import { makeStyles } from '@material-ui/styles';\r\nimport React, { useContext } from 'react';\r\nimport { ThemeContext } from './contexts/theme.context';\r\n\r\nexport default function Footer() {\r\n  const { darkMode } = useContext(ThemeContext);\r\n\r\n  const useStyles = makeStyles({\r\n    footer: {\r\n      backgroundColor: darkMode ? '#121212' : 'white',\r\n      color: darkMode ? 'white' : 'black',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      justifyItems: 'center',\r\n      margin: '0 5px',\r\n      textAlign: 'center',\r\n      '& a': {\r\n        color: darkMode ? '#00e5ff' : null,\r\n      },\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.footer}>\r\n      <p>\r\n        <strong>JATL!</strong> (Just Another Task List). Made with ðŸ’š by <a href=\"https://www.github.com/moisesrj97\"> MoisÃ©s</a>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { createContext, useReducer, useEffect } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst taskReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'ADD':\r\n      return [...state, { id: uuid(), text: action.text, completed: false }];\r\n    case 'TOGGLE':\r\n      return state.map((e) => {\r\n        if (e.id === action.id) {\r\n          return { id: e.id, text: e.text, completed: !e.completed };\r\n        } else {\r\n          return e;\r\n        }\r\n      });\r\n    case 'DELETE':\r\n      return state.filter((e) => e.id !== action.id);\r\n\r\n    case 'EDIT': {\r\n      return state.map((e) => {\r\n        if (e.id === action.id) {\r\n          return { id: e.id, text: action.text, completed: e.completed };\r\n        } else {\r\n          return e;\r\n        }\r\n      });\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const TaskContext = createContext();\r\nexport const TaskMethodsContext = createContext();\r\n\r\nexport function TaskProvider(props) {\r\n  const [tasks, dispatch] = useReducer(taskReducer, JSON.parse(window.localStorage.getItem('tasks')) || []);\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem('tasks', JSON.stringify([...tasks]));\r\n    console.log(JSON.parse(window.localStorage.getItem('tasks')));\r\n  }, [tasks]);\r\n\r\n  return (\r\n    <TaskContext.Provider value={tasks}>\r\n      <TaskMethodsContext.Provider value={dispatch}>{props.children}</TaskMethodsContext.Provider>\r\n    </TaskContext.Provider>\r\n  );\r\n}\r\n","import React, { useContext, useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { ThemeContext } from './contexts/theme.context';\r\nimport { TaskMethodsContext } from './contexts/task.context';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nexport default function TaskForm() {\r\n  const { darkMode } = useContext(ThemeContext);\r\n  const dispatch = useContext(TaskMethodsContext);\r\n\r\n  const [text, setText] = useState('');\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      marginTop: '20px',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      '& .MuiOutlinedInput-root': {\r\n        '& fieldset': {\r\n          borderColor: darkMode ? 'white' : 'black',\r\n        },\r\n      },\r\n      '& .MuiInputLabel-outlined': {\r\n        color: darkMode ? '#ffffff70' : null,\r\n      },\r\n      '& .MuiOutlinedInput-input': {\r\n        color: darkMode ? 'white' : 'black',\r\n      },\r\n      '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n        borderColor: darkMode ? '#5bfffc' : null,\r\n      },\r\n      '& .MuiFormLabel-root.Mui-focused': {\r\n        color: darkMode ? '#5bfffc' : null,\r\n      },\r\n    },\r\n    input: {\r\n      width: '95%',\r\n      color: 'white',\r\n    },\r\n  });\r\n\r\n  const handleSubmit = () => {\r\n    if (text !== '') {\r\n      dispatch({ type: 'ADD', text: text });\r\n      setText('');\r\n    } else {\r\n      alert('Please, no empty tasks');\r\n    }\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <TextField\r\n        className={classes.input}\r\n        label=\"New Task...?\"\r\n        variant=\"outlined\"\r\n        value={text}\r\n        onChange={(evt) => {\r\n          setText(evt.target.value);\r\n        }}\r\n        onKeyUp={(evt) => {\r\n          evt.code === 'Enter' && handleSubmit();\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { makeStyles } from '@material-ui/core';\r\nimport React, { useContext } from 'react';\r\nimport { TaskMethodsContext } from './contexts/task.context';\r\nimport { ThemeContext } from './contexts/theme.context';\r\n\r\nexport default function EditTaskForm(props) {\r\n  const { darkMode } = useContext(ThemeContext);\r\n  const dispatch = useContext(TaskMethodsContext);\r\n\r\n  const useStyles = makeStyles({\r\n    form: {\r\n      width: '100%',\r\n      flexGrow: 1,\r\n      border: 'none',\r\n      fontSize: '1rem',\r\n      color: darkMode ? 'white' : 'black',\r\n      backgroundColor: '#FFFFFF00',\r\n      padding: 0,\r\n      margin: 0,\r\n      height: '20px',\r\n      textDecoration: 'underline',\r\n      fontFamily:\r\n        \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen','Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;\",\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <input\r\n      value={props.value}\r\n      className={classes.form}\r\n      type=\"text\"\r\n      onChange={(e) => dispatch({ type: 'EDIT', text: e.target.value, id: props.id })}\r\n    />\r\n  );\r\n}\r\n","import { makeStyles } from '@material-ui/core';\r\nimport React, { useContext, memo, useState } from 'react';\r\n\r\nimport EditTaskForm from './EditTaskForm';\r\n\r\nimport { ThemeContext } from './contexts/theme.context';\r\nimport { TaskMethodsContext } from './contexts/task.context';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\nfunction Task(props) {\r\n  const { darkMode } = useContext(ThemeContext);\r\n  const dispatch = useContext(TaskMethodsContext);\r\n\r\n  const [editing, setEditing] = useState(false);\r\n\r\n  const useStyle = makeStyles({\r\n    root: {\r\n      '& .MuiCheckbox-colorPrimary.Mui-checked': {\r\n        color: darkMode ? '#5bfffc' : null,\r\n      },\r\n    },\r\n\r\n    task: {\r\n      padding: '15px 30px',\r\n      margin: '5px 10px',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between',\r\n      '& p': {\r\n        margin: 0,\r\n        height: '20px',\r\n        flexGrow: 1,\r\n        textDecoration: props.completed ? 'line-through' : 'none',\r\n        opacity: props.completed ? 0.5 : 1,\r\n        fontSize: '1rem',\r\n      },\r\n      '&:hover $edit': {\r\n        transform: 'scale(1)',\r\n        opacity: 1,\r\n        transition: 'all 0.3s linear',\r\n      },\r\n      '&:hover $delete': {\r\n        transform: 'scale(1)',\r\n        opacity: 1,\r\n        transition: 'all 0.3s linear',\r\n      },\r\n      backgroundColor: darkMode ? 'rgb(56, 56, 56)' : 'white',\r\n      color: darkMode ? 'white' : 'black',\r\n    },\r\n\r\n    checkBox: {\r\n      color: darkMode ? 'white' : 'black',\r\n    },\r\n\r\n    edit: {\r\n      cursor: 'pointer',\r\n      transform: 'scale(0.1)',\r\n      opacity: 0,\r\n      margin: '0 5px',\r\n      '&:hover': {\r\n        color: 'blue',\r\n        transition: 'all 0.3s linear',\r\n      },\r\n    },\r\n\r\n    delete: {\r\n      cursor: 'pointer',\r\n      transform: 'scale(0.1)',\r\n      opacity: 0,\r\n      margin: '0 5px',\r\n      '&:hover': {\r\n        color: 'red',\r\n        transition: 'all 0.3s linear',\r\n      },\r\n    },\r\n  });\r\n\r\n  const classes = useStyle();\r\n\r\n  return (\r\n    <Paper elevation={2} className={classes.task}>\r\n      <div className={classes.root}>\r\n        <Checkbox\r\n          className={classes.checkBox}\r\n          color=\"primary\"\r\n          checked={props.completed}\r\n          onChange={() => dispatch({ type: 'TOGGLE', id: props.id })}\r\n        />\r\n      </div>\r\n      {editing ? <EditTaskForm value={props.text} id={props.id} /> : <p>{props.text}</p>}\r\n      <EditIcon className={classes.edit} onClick={() => setEditing(!editing)} />\r\n      <DeleteForeverIcon className={classes.delete} onClick={() => dispatch({ type: 'DELETE', id: props.id })} />\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default memo(Task);\r\n","import React, { useContext } from 'react';\r\nimport TaskForm from './TaskForm';\r\nimport Task from './Task';\r\n\r\nimport { ThemeContext } from './contexts/theme.context';\r\nimport { TaskContext } from './contexts/task.context';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport default function Main() {\r\n  const { darkMode } = useContext(ThemeContext);\r\n  const tasks = useContext(TaskContext);\r\n\r\n  const useStyles = makeStyles({\r\n    main: {\r\n      flexGrow: 1,\r\n      backgroundColor: darkMode ? '#121212' : 'white',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n\r\n    container: {\r\n      width: '50%',\r\n      minHeight: '400px',\r\n      backgroundColor: darkMode ? 'rgb(56, 56, 56)' : 'white',\r\n      color: darkMode ? 'white' : 'black',\r\n    },\r\n    '@media (max-width: 600px)': {\r\n      container: {\r\n        width: '90%',\r\n        minHeight: '75vh',\r\n      },\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.main}>\r\n      <Paper elevation={3} className={classes.container}>\r\n        <TaskForm />\r\n        <div className={'tasks'}>\r\n          {tasks.map((e) => {\r\n            return (\r\n              <Task {...e} key={e.id}>\r\n                {e.text}\r\n              </Task>\r\n            );\r\n          })}\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport Navbar from './Navbar';\nimport Footer from './Footer';\nimport Main from './Main';\n\nimport { ThemeProvider } from './contexts/theme.context';\nimport { TaskProvider } from './contexts/task.context';\n\nimport './App.css';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <ThemeProvider>\n        <TaskProvider>\n          <Navbar />\n          <Main />\n          <Footer />\n        </TaskProvider>\n      </ThemeProvider>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}